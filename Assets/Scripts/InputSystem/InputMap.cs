//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/InputSystem/InputMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMap : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMap"",
    ""maps"": [
        {
            ""name"": ""I"",
            ""id"": ""ee9d9142-ea0e-4633-b5b7-844ca637d5e6"",
            ""actions"": [
                {
                    ""name"": ""run"",
                    ""type"": ""Value"",
                    ""id"": ""69b6517b-57ae-45c2-96da-81403371442a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""jump"",
                    ""type"": ""Button"",
                    ""id"": ""aab17802-8799-4c1b-b908-aa32deaf1656"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""shoot"",
                    ""type"": ""Button"",
                    ""id"": ""b0c55092-9761-4a5c-b3e6-6a82a11cf480"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""pause"",
                    ""type"": ""Button"",
                    ""id"": ""9d9f47c7-dce1-475a-980d-3e30f9d6221a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""weapon slot 1"",
                    ""type"": ""Button"",
                    ""id"": ""9aa103bf-8916-441c-a574-feb4ba4ddbed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""weapon slot 2"",
                    ""type"": ""Button"",
                    ""id"": ""9adab920-8594-484e-8869-60d1438e0683"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""weapon slot 3"",
                    ""type"": ""Button"",
                    ""id"": ""8869f0df-c50f-4870-a421-dd85ff841bf8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""weapon scroll"",
                    ""type"": ""Value"",
                    ""id"": ""e9ab7f3e-b8d9-4f09-a924-2fcef97e8095"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""reload"",
                    ""type"": ""Button"",
                    ""id"": ""f494ca55-4456-40eb-8205-b72a51fc00f8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9a6b2e40-3dd7-45e3-9ef4-a0eddd7b758d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""a0d2c95b-aceb-4368-84a2-fa63b0fb82e7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""run"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2260a592-568e-4387-aef4-9ac1c5de87fc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""33916e5c-b405-4c3e-a000-206e09f16ee7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""64f14328-351e-4e62-a9e7-dea667113a45"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""23efbb4b-8c2f-4032-ad95-b3e06720e2b4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""aff0075f-e5da-4204-be76-eab477604b09"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db2593c1-5860-4000-a5fe-e5fcff28ef0a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b3fd8cd-4e6f-4002-95d3-ae26f5829a35"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""weapon slot 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0608725-253d-4571-90c4-003f16f56eba"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""weapon slot 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5acfc74-6f27-4a0e-ad3d-783fab28f394"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""weapon slot 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1c09e6d-f295-4875-ab72-c4935f4ce7cd"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""weapon scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ddb4d8e2-4758-4c39-af2c-dc2e29fdff7f"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // I
        m_I = asset.FindActionMap("I", throwIfNotFound: true);
        m_I_run = m_I.FindAction("run", throwIfNotFound: true);
        m_I_jump = m_I.FindAction("jump", throwIfNotFound: true);
        m_I_shoot = m_I.FindAction("shoot", throwIfNotFound: true);
        m_I_pause = m_I.FindAction("pause", throwIfNotFound: true);
        m_I_weaponslot1 = m_I.FindAction("weapon slot 1", throwIfNotFound: true);
        m_I_weaponslot2 = m_I.FindAction("weapon slot 2", throwIfNotFound: true);
        m_I_weaponslot3 = m_I.FindAction("weapon slot 3", throwIfNotFound: true);
        m_I_weaponscroll = m_I.FindAction("weapon scroll", throwIfNotFound: true);
        m_I_reload = m_I.FindAction("reload", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // I
    private readonly InputActionMap m_I;
    private IIActions m_IActionsCallbackInterface;
    private readonly InputAction m_I_run;
    private readonly InputAction m_I_jump;
    private readonly InputAction m_I_shoot;
    private readonly InputAction m_I_pause;
    private readonly InputAction m_I_weaponslot1;
    private readonly InputAction m_I_weaponslot2;
    private readonly InputAction m_I_weaponslot3;
    private readonly InputAction m_I_weaponscroll;
    private readonly InputAction m_I_reload;
    public struct IActions
    {
        private @InputMap m_Wrapper;
        public IActions(@InputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @run => m_Wrapper.m_I_run;
        public InputAction @jump => m_Wrapper.m_I_jump;
        public InputAction @shoot => m_Wrapper.m_I_shoot;
        public InputAction @pause => m_Wrapper.m_I_pause;
        public InputAction @weaponslot1 => m_Wrapper.m_I_weaponslot1;
        public InputAction @weaponslot2 => m_Wrapper.m_I_weaponslot2;
        public InputAction @weaponslot3 => m_Wrapper.m_I_weaponslot3;
        public InputAction @weaponscroll => m_Wrapper.m_I_weaponscroll;
        public InputAction @reload => m_Wrapper.m_I_reload;
        public InputActionMap Get() { return m_Wrapper.m_I; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(IActions set) { return set.Get(); }
        public void SetCallbacks(IIActions instance)
        {
            if (m_Wrapper.m_IActionsCallbackInterface != null)
            {
                @run.started -= m_Wrapper.m_IActionsCallbackInterface.OnRun;
                @run.performed -= m_Wrapper.m_IActionsCallbackInterface.OnRun;
                @run.canceled -= m_Wrapper.m_IActionsCallbackInterface.OnRun;
                @jump.started -= m_Wrapper.m_IActionsCallbackInterface.OnJump;
                @jump.performed -= m_Wrapper.m_IActionsCallbackInterface.OnJump;
                @jump.canceled -= m_Wrapper.m_IActionsCallbackInterface.OnJump;
                @shoot.started -= m_Wrapper.m_IActionsCallbackInterface.OnShoot;
                @shoot.performed -= m_Wrapper.m_IActionsCallbackInterface.OnShoot;
                @shoot.canceled -= m_Wrapper.m_IActionsCallbackInterface.OnShoot;
                @pause.started -= m_Wrapper.m_IActionsCallbackInterface.OnPause;
                @pause.performed -= m_Wrapper.m_IActionsCallbackInterface.OnPause;
                @pause.canceled -= m_Wrapper.m_IActionsCallbackInterface.OnPause;
                @weaponslot1.started -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponslot1;
                @weaponslot1.performed -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponslot1;
                @weaponslot1.canceled -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponslot1;
                @weaponslot2.started -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponslot2;
                @weaponslot2.performed -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponslot2;
                @weaponslot2.canceled -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponslot2;
                @weaponslot3.started -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponslot3;
                @weaponslot3.performed -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponslot3;
                @weaponslot3.canceled -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponslot3;
                @weaponscroll.started -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponscroll;
                @weaponscroll.performed -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponscroll;
                @weaponscroll.canceled -= m_Wrapper.m_IActionsCallbackInterface.OnWeaponscroll;
                @reload.started -= m_Wrapper.m_IActionsCallbackInterface.OnReload;
                @reload.performed -= m_Wrapper.m_IActionsCallbackInterface.OnReload;
                @reload.canceled -= m_Wrapper.m_IActionsCallbackInterface.OnReload;
            }
            m_Wrapper.m_IActionsCallbackInterface = instance;
            if (instance != null)
            {
                @run.started += instance.OnRun;
                @run.performed += instance.OnRun;
                @run.canceled += instance.OnRun;
                @jump.started += instance.OnJump;
                @jump.performed += instance.OnJump;
                @jump.canceled += instance.OnJump;
                @shoot.started += instance.OnShoot;
                @shoot.performed += instance.OnShoot;
                @shoot.canceled += instance.OnShoot;
                @pause.started += instance.OnPause;
                @pause.performed += instance.OnPause;
                @pause.canceled += instance.OnPause;
                @weaponslot1.started += instance.OnWeaponslot1;
                @weaponslot1.performed += instance.OnWeaponslot1;
                @weaponslot1.canceled += instance.OnWeaponslot1;
                @weaponslot2.started += instance.OnWeaponslot2;
                @weaponslot2.performed += instance.OnWeaponslot2;
                @weaponslot2.canceled += instance.OnWeaponslot2;
                @weaponslot3.started += instance.OnWeaponslot3;
                @weaponslot3.performed += instance.OnWeaponslot3;
                @weaponslot3.canceled += instance.OnWeaponslot3;
                @weaponscroll.started += instance.OnWeaponscroll;
                @weaponscroll.performed += instance.OnWeaponscroll;
                @weaponscroll.canceled += instance.OnWeaponscroll;
                @reload.started += instance.OnReload;
                @reload.performed += instance.OnReload;
                @reload.canceled += instance.OnReload;
            }
        }
    }
    public IActions @I => new IActions(this);
    public interface IIActions
    {
        void OnRun(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnWeaponslot1(InputAction.CallbackContext context);
        void OnWeaponslot2(InputAction.CallbackContext context);
        void OnWeaponslot3(InputAction.CallbackContext context);
        void OnWeaponscroll(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
    }
}
